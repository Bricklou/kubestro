{
  $schema: "https://docs.renovatebot.com/renovate-schema.json",
  packageRules: [
    // Docker
    {
      matchDatasources: ["docker"],
      matchUpdateTypes: ["major"],
      commitMessagePrefix: "feat(container)!: ",
      commitMessageTopic: "{{depName}}",
      commitMessageExtra: " ( {{currentVersion}} -> {{newVersion}} )",
    },
    {
      matchDatasources: ["docker"],
      matchUpdateTypes: ["minor"],
      semanticCommitType: "feat",
      semanticCommitScope: "container",
      commitMessageTopic: "{{depName}}",
      commitMessageExtra: "( {{currentVersion}} → {{newVersion}} )",
    },
    {
      matchDatasources: ["docker"],
      matchUpdateTypes: ["patch"],
      semanticCommitType: "fix",
      semanticCommitScope: "container",
      commitMessageTopic: "{{depName}}",
      commitMessageExtra: "( {{currentVersion}} → {{newVersion}} )",
    },
    {
      matchDatasources: ["docker"],
      matchUpdateTypes: ["digest"],
      semanticCommitType: "chore",
      semanticCommitScope: "container",
      commitMessageTopic: "{{depName}}",
      commitMessageExtra: "( {{currentDigestShort}} → {{newDigestShort}} )",
    },

    // Helm
    {
      matchDatasources: ["helm"],
      matchUpdateTypes: ["major"],
      commitMessagePrefix: "feat(helm)!: ",
      commitMessageTopic: "{{depName}}",
      commitMessageExtra: "( {{currentVersion}} → {{newVersion}} )",
    },
    {
      matchDatasources: ["helm"],
      matchUpdateTypes: ["minor"],
      semanticCommitType: "feat",
      semanticCommitScope: "helm",
      commitMessageTopic: "{{depName}}",
      commitMessageExtra: "( {{currentVersion}} → {{newVersion}} )",
    },
    {
      matchDatasources: ["helm"],
      matchUpdateTypes: ["patch"],
      semanticCommitType: "fix",
      semanticCommitScope: "helm",
      commitMessageTopic: "{{depName}}",
      commitMessageExtra: "( {{currentVersion}} → {{newVersion}} )",
    },

    // Node
    {
      matchDatasources: ["node"],
      matchUpdateTypes: ["major"],
      commitMessagePrefix: "feat(node)!: ",
      commitMessageTopic: "{{depName}}",
      commitMessageExtra: "( {{currentVersion}} → {{newVersion}} )",
    },
    {
      matchDatasources: ["node"],
      matchUpdateTypes: ["minor"],
      semanticCommitType: "feat",
      semanticCommitScope: "node",
      commitMessageTopic: "{{depName}}",
      commitMessageExtra: "( {{currentVersion}} → {{newVersion}} )",
    },
    {
      matchDatasources: ["node"],
      matchUpdateTypes: ["patch"],
      semanticCommitType: "fix",
      semanticCommitScope: "node",
      commitMessageTopic: "{{depName}}",
      commitMessageExtra: "( {{currentVersion}} → {{newVersion}} )",
    },

    // Rust
    {
      matchDatasources: ["rust"],
      matchUpdateTypes: ["major"],
      commitMessagePrefix: "feat(rust)!: ",
      commitMessageTopic: "{{depName}}",
      commitMessageExtra: "( {{currentVersion}} → {{newVersion}} )",
    },
    {
      matchDatasources: ["rust"],
      matchUpdateTypes: ["minor"],
      semanticCommitType: "feat",
      semanticCommitScope: "rust",
      commitMessageTopic: "{{depName}}",
      commitMessageExtra: "( {{currentVersion}} → {{newVersion}} )",
    },
    {
      matchDatasources: ["rust"],
      matchUpdateTypes: ["patch"],
      semanticCommitType: "fix",
      semanticCommitScope: "rust",
      commitMessageTopic: "{{depName}}",
      commitMessageExtra: "( {{currentVersion}} → {{newVersion}} )",
    },

    // GitHub
    {
      matchDatasources: ["github-releases", "github-tags"],
      matchUpdateTypes: ["major"],
      commitMessagePrefix: "feat(github-release)!: ",
      commitMessageTopic: "{{depName}}",
      commitMessageExtra: "( {{currentVersion}} → {{newVersion}} )",
    },
    {
      matchDatasources: ["github-releases", "github-tags"],
      matchUpdateTypes: ["minor"],
      semanticCommitType: "feat",
      semanticCommitScope: "github-release",
      commitMessageTopic: "{{depName}}",
      commitMessageExtra: "( {{currentVersion}} → {{newVersion}} )",
    },
    {
      matchDatasources: ["github-releases", "github-tags"],
      matchUpdateTypes: ["patch"],
      semanticCommitType: "fix",
      semanticCommitScope: "github-release",
      commitMessageTopic: "{{depName}}",
      commitMessageExtra: "( {{currentVersion}} → {{newVersion}} )",
    },
    {
      matchManagers: ["github-actions"],
      matchUpdateTypes: ["major"],
      commitMessagePrefix: "feat(github-action)!: ",
      commitMessageTopic: "{{depName}}",
      commitMessageExtra: "( {{currentVersion}} → {{newVersion}} )",
    },
    {
      matchManagers: ["github-actions"],
      matchUpdateTypes: ["minor"],
      semanticCommitType: "feat",
      semanticCommitScope: "github-action",
      commitMessageTopic: "{{depName}}",
      commitMessageExtra: "( {{currentVersion}} → {{newVersion}} )",
    },
    {
      matchManagers: ["github-actions"],
      matchUpdateTypes: ["patch"],
      semanticCommitType: "fix",
      semanticCommitScope: "github-action",
      commitMessageTopic: "{{depName}}",
      commitMessageExtra: "( {{currentVersion}} → {{newVersion}} )",
    },
  ],
}
