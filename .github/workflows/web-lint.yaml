---
name: Web Lint

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
    branches:
      - main
      - develop
    paths:
      # Check if a project file changed
      - "projects/**/src/**/*.{tsx,ts,css}"
      # Check if a dependency changed
      - "projects/**/package.json"
      - "**/pnpm-workspace.yaml"
      # Check if a configuration file changed
      - "**/eslint.config.mjs"
      - "**/stylelint.config.mjs"
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: read
  checks: write

env:
  NX_CACHE: cache-nx
  DEPENDENCIES_CACHE: cache-node-modules

jobs:
  install-deps:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: "10.x"
          run_install: false

      - name: Setup Node.JS
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "pnpm"

      - name: Cache node_modules
        id: cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ env.DEPENDENCIES_CACHE }}-${{ hashFiles('pnpm-lock.yaml') }}

      - name: pnpm install
        if: steps.cache.outputs.cache-hit != 'true'
        run: pnpm install --frozen-lockfile

  web-lint:
    runs-on: ubuntu-latest
    needs: install-deps

    strategy:
      fail-fast: false
      matrix:
        target: ["build", "lint:js", "lint:css"]
        jobIndex: [1, 2, 3, 4]

    env:
      jobCount: 4

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: "10.x"

      - name: Setup Node.JS
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "pnpm"

      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ env.DEPENDENCIES_CACHE }}-${{ hashFiles('pnpm-lock.yaml') }}

      # this task is a fix to reconstruct node_modules in workspace projects after the cache
      - name: pnpm install
        run: pnpm install --frozen-lockfile

      - name: Cache NX
        uses: actions/cache@v4
        with:
          path: node_modules/.cache/nx
          key: ${{ env.NX_CACHE }}-${{ hashFiles('pnpm-lock.yaml') }}-${{ matrix.target }}-${{ github.sha }}
          restore-keys: |
            ${{ env.NX_CACHE }}-${{ hashFiles('pnpm-lock.yaml') }}-${{ matrix.target }}-${{ matrix.jobIndex }}-
            ${{ env.NX_CACHE }}-${{ hashFiles('pnpm-lock.yaml') }}-
            ${{ env.NX_CACHE }}-

      - run: git fetch --no-tags --prune --depth=2 origin main

      - name: Print Environment Info
        run: pnpm exec nx report

      - name: nx run-many:${{ matrix.target }}
        run: node ./configs/run-many.mjs "${{ matrix.target }}" "${{ matrix.jobIndex }}" "${{ env.jobCount }}" "$GITHUB_REF"
